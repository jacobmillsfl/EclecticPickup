/*
Author:			This code was generated by DALGen Web available at https://dalgen.opendevtools.org
Date:			02/05/2023
Description:		Creates the Artist table and respective stored procedures

*/

USE tafdb;


-- Create Table 

CREATE TABLE `tafdb`.`Artist` (
id INT AUTO_INCREMENT,
name VARCHAR(255),
description VARCHAR(1024),
logoPath VARCHAR(512),
CONSTRAINT pk_Artist_id PRIMARY KEY (id)
);


DELIMITER //
CREATE PROCEDURE `tafdb`.`usp_Artist_Load`
(
	IN paramid INT
)
BEGIN
	SELECT
		`Artist`.`id` AS `id`,
		`Artist`.`name` AS `name`,
		`Artist`.`description` AS `description`,
		`Artist`.`logoPath` AS `logoPath`
	FROM `Artist`
	WHERE `Artist`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafdb`.`usp_Artist_LoadAll`
(
)
BEGIN
	SELECT
		`Artist`.`id` AS `id`,
		`Artist`.`name` AS `name`,
		`Artist`.`description` AS `description`,
		`Artist`.`logoPath` AS `logoPath`
	FROM `Artist`;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafdb`.`usp_Artist_Add`
(
	IN paramname VARCHAR(255),
	IN paramdescription VARCHAR(1024),
	IN paramlogoPath VARCHAR(512)
)
BEGIN
	INSERT INTO `Artist` (name,description,logoPath)
	VALUES (paramname,paramdescription,paramlogoPath);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafdb`.`usp_Artist_Update`
(
	IN paramid INT,
	IN paramname VARCHAR(255),
	IN paramdescription VARCHAR(1024),
	IN paramlogoPath VARCHAR(512)
)
BEGIN
	UPDATE `Artist`
	SET
		name = paramname,
		description = paramdescription,
		logoPath = paramlogoPath
	WHERE 
		id = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafdb`.`usp_Artist_Delete`
(
	IN paramid INT
)
BEGIN
	DELETE FROM `Artist`
	WHERE `Artist`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafdb`.`usp_Artist_Search`
(
	IN paramid INT,
	IN paramname VARCHAR(255),
	IN paramdescription VARCHAR(1024),
	IN paramlogoPath VARCHAR(512)
)
BEGIN
	SELECT
		`Artist`.`id` AS `id`,
		`Artist`.`name` AS `name`,
		`Artist`.`description` AS `description`,
		`Artist`.`logoPath` AS `logoPath`
	FROM `Artist`
	WHERE 
		COALESCE(`Artist`.`id`,0) = COALESCE(paramid,`Artist`.`id`,0)
		 AND COALESCE(`Artist`.`name`,'') LIKE COALESCE(CONCAT('%', paramname, '%'),`Artist`.`name`,'')
		 AND COALESCE(`Artist`.`description`,'') LIKE COALESCE(CONCAT('%', paramdescription, '%'),`Artist`.`description`,'')
		 AND COALESCE(`Artist`.`logoPath`,'') LIKE COALESCE(CONCAT('%', paramlogoPath, '%'),`Artist`.`logoPath`,'');
END //
DELIMITER ;


