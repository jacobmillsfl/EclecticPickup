/*
Author:			This code was generated by DALGen Web available at https://dalgen.opendevtools.org
Date:			02/05/2023
Description:		Creates the Album table and respective stored procedures

*/

USE eclecticpickupdb;

-- Create Table 

CREATE TABLE `eclecticpickupdb`.`Album` (
id INT AUTO_INCREMENT,
artistId INT NOT NULL,
name VARCHAR(255),
artPath VARCHAR(512),
releaseDate DATE,
CONSTRAINT pk_Album_id PRIMARY KEY (id),
CONSTRAINT fk_Album_artistId_Artist_id FOREIGN KEY (artistId) REFERENCES Artist (id)
);


DELIMITER //
CREATE PROCEDURE `eclecticpickupdb`.`usp_Album_Load`
(
	IN paramid INT
)
BEGIN
	SELECT
		`Album`.`id` AS `id`,
		`Album`.`artistId` AS `artistId`,
		`Album`.`name` AS `name`,
		`Album`.`artPath` AS `artPath`,
		`Album`.`releaseDate` AS `releaseDate`
	FROM `Album`
	WHERE `Album`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `eclecticpickupdb`.`usp_Album_LoadAll`
(
)
BEGIN
	SELECT
		`Album`.`id` AS `id`,
		`Album`.`artistId` AS `artistId`,
		`Album`.`name` AS `name`,
		`Album`.`artPath` AS `artPath`,
		`Album`.`releaseDate` AS `releaseDate`
	FROM `Album`;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `eclecticpickupdb`.`usp_Album_Add`
(
	IN paramartistId INT,
	IN paramname VARCHAR(255),
	IN paramartPath VARCHAR(512),
	IN paramreleaseDate DATE
)
BEGIN
	INSERT INTO `Album` (artistId,name,artPath,releaseDate)
	VALUES (paramartistId,paramname,paramartPath,paramreleaseDate);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `eclecticpickupdb`.`usp_Album_Update`
(
	IN paramid INT,
	IN paramartistId INT,
	IN paramname VARCHAR(255),
	IN paramartPath VARCHAR(512),
	IN paramreleaseDate DATE
)
BEGIN
	UPDATE `Album`
	SET
		artistId = paramartistId,
		name = paramname,
		artPath = paramartPath,
		releaseDate = paramreleaseDate
	WHERE 
		id = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `eclecticpickupdb`.`usp_Album_Delete`
(
	IN paramid INT
)
BEGIN
	DELETE FROM `Album`
	WHERE `Album`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `eclecticpickupdb`.`usp_Album_Search`
(
	IN paramid INT,
	IN paramartistId INT,
	IN paramname VARCHAR(255),
	IN paramartPath VARCHAR(512),
	IN paramreleaseDate DATE
)
BEGIN
	SELECT
		`Album`.`id` AS `id`,
		`Album`.`artistId` AS `artistId`,
		`Album`.`name` AS `name`,
		`Album`.`artPath` AS `artPath`,
		`Album`.`releaseDate` AS `releaseDate`
	FROM `Album`
	WHERE 
		COALESCE(`Album`.`id`,0) = COALESCE(paramid,`Album`.`id`,0)
		 AND COALESCE(`Album`.`artistId`,0) = COALESCE(paramartistId,`Album`.`artistId`,0)
		 AND COALESCE(`Album`.`name`,'') LIKE COALESCE(CONCAT('%', paramname, '%'),`Album`.`name`,'')
		 AND COALESCE(`Album`.`artPath`,'') LIKE COALESCE(CONCAT('%', paramartPath, '%'),`Album`.`artPath`,'')
		 AND COALESCE(`Album`.`releaseDate`,'') = COALESCE(paramreleaseDate,`Album`.`releaseDate`,'');
END //
DELIMITER ;


